/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */

// generate enum based on strings instead of numbers
// (see https://blog.rsuter.com/how-to-implement-an-enum-with-string-values-in-typescript/)
export enum AccountTypes {
    Unknown = 0,
    Person = 1,
    LegalEntity = 2,
}

export enum RetailWalletAccessLevels {
    None = 0,
    Basic = 1,
    Full = 2,
}

export enum GenderTypes {
    NotSet = 0,
    Male = 1,
    Female = 2,
    Other = 3,
}

export enum BulkResultItemStatus {
    NotSet = 0,
    Ok = 1,
    Failed = 10,
    Duplicate = 11,
}

export enum FaucetFundingResult {
    Initiated = 1,
    Failed = -2,
    NotEligible = -1,
}

export enum IssuerWalletRoles {
    Issuer = 1,
    Distributor = 2,
}

export enum Blockchains {
    NotSet = 0,
    Bitcoin = 1,
    Ethereum = 2,
    Stellar = 3,
    Litecoin = 4,
    Polkadot = 5,
    Kusama = 6,
    Algorand = 7,
    Cosmos = 8,
    Terra = 9,
    Polymesh = 10,
    Binance = 11,
    Solana = 12,
    Cardano = 13,
    Polygon = 14,
    Avalanche = 15,
}

export enum ReviewDecision {
    Pending = 0,
    Approved = 1,
    Rejected = 2,
}

export enum WalletTransactionStatus {
    New = 0,
    Pending = 1,
    Rejected = 2,
    Approved = 3,
    Sent = 4,
    Successful = 5,
    Failed = 6,
    TimedOut = 7,
    FailedOnBlockChain = 8,
}

export enum TransactionActions {
    TxNative = 1,
    TxAsset = 2,
    IssueAsset = 3,
    FreezeAsset = 4,
    ClawbackAssets = 5,
    OptIn = 6,
    AuthOptIn = 7,
    LockAccount = 8,
    Stake = 9,
    Unstake = 10,
    WithdrawRewards = 11,
    IssueFungibleAsset = 12,
    TxFungibleAsset = 13,
}

export enum OptInStatus {
    New = 0,
    Sent = 1,
    Failed = 2,
    Rejected = 3,
    Approved = 4,
    Revoked = 5,
    AuthorizationFailed = 6,
    Pending = 7,
}

export enum Products {
    RetailWallet = 101,
    Tokenization = 103,
}

export enum WalletTypes {
    Institutional = 1,
    Retail = 2,
    Issuer = 3,
    Faucet = 4,
}

export enum TxStatus {
    New = 1,
    Successful = 2,
    Canceled = -3,
    Failed = -2,
    Retrying = -1,
}


/**
 * bundle of all enums for databinding to options, radio-buttons etc.
 * usage in component:
 *   import { AllEnums, minValueValidator, maxValueValidator } from '../../models/webapi';
 *
 *   @Component({
 *       ...
 *   })
 *   export class xxxComponent implements OnInit {
 *       allEnums = AllEnums;
 *       ...
 *       ngOnInit() {
 *           this.allEnums = AllEnums.instance;
 *       }
 *   }
*/
export class AllEnums {
    private static _instance: AllEnums = new AllEnums();
    constructor() {
        if (AllEnums._instance) {
            throw new Error("Error: Instantiation failed: Use AllEnums.instance instead of new");
        }
        AllEnums._instance = this;
    }
    static get instance(): AllEnums {
        return AllEnums._instance;
    }

    AccountTypes = AccountTypes;
    RetailWalletAccessLevels = RetailWalletAccessLevels;
    GenderTypes = GenderTypes;
    BulkResultItemStatus = BulkResultItemStatus;
    FaucetFundingResult = FaucetFundingResult;
    IssuerWalletRoles = IssuerWalletRoles;
    Blockchains = Blockchains;
    ReviewDecision = ReviewDecision;
    WalletTransactionStatus = WalletTransactionStatus;
    TransactionActions = TransactionActions;
    OptInStatus = OptInStatus;
    Products = Products;
    WalletTypes = WalletTypes;
    TxStatus = TxStatus;
}
