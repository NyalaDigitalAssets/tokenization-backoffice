/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';


import { SimpleAccessCredentialsDto } from './simple-access-credentials-dto.model';

export interface IRetailWalletOptInDto {
    tokenizedAssetId?: string;
    credentials?: SimpleAccessCredentialsDto;
}


export class RetailWalletOptInDto extends BaseModel implements IRetailWalletOptInDto  {
    tokenizedAssetId: string;
    credentials: SimpleAccessCredentialsDto;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
     * @useFormGroupValuesToModel if true use formValues
    */
    constructor(values?: any, useFormGroupValuesToModel = false) {
        super();
        this.credentials = new SimpleAccessCredentialsDto(); 

        if (values) {
            this.setValues(values, useFormGroupValuesToModel);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, useFormGroupValuesToModel = false): void {
        if (values) {
            const rawValues = this.getValuesToUse(values, useFormGroupValuesToModel);
            this.tokenizedAssetId = rawValues.tokenizedAssetId;
            this.credentials.setValues(rawValues.credentials, useFormGroupValuesToModel);
            // set values in model properties for added formControls
            super.setValuesInAddedPropertiesOfAttachedFormControls(values, useFormGroupValuesToModel);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                tokenizedAssetId: new FormControl(this.tokenizedAssetId),
                credentials: this.credentials.$formGroup,
            });
        }
        return this._formGroup;
    }

    /**
     * set the FormGroup values to the model values.
    */
    setFormGroupValues() {
        this.$formGroup.controls['tokenizedAssetId'].setValue(this.tokenizedAssetId);
        this.credentials.setFormGroupValues();
        // set formValues in added formControls
        super.setFormGroupValuesInAddedFormControls();
    }
}

