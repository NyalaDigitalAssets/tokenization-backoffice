/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';



export interface IRetailWalletSeedRecoveryDto {
    institutionId?: string;
    accountId?: string;
    recoveryKey?: string;
    retailWalletSeedId?: string;
    status?: number;
    closedDate?: Date;
}


export class RetailWalletSeedRecoveryDto extends BaseModel implements IRetailWalletSeedRecoveryDto  {
    institutionId: string;
    accountId: string;
    recoveryKey: string;
    retailWalletSeedId: string;
    status: number;
    closedDate: Date;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
     * @useFormGroupValuesToModel if true use formValues
    */
    constructor(values?: any, useFormGroupValuesToModel = false) {
        super();

        if (values) {
            this.setValues(values, useFormGroupValuesToModel);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, useFormGroupValuesToModel = false): void {
        if (values) {
            const rawValues = this.getValuesToUse(values, useFormGroupValuesToModel);
            this.institutionId = rawValues.institutionId;
            this.accountId = rawValues.accountId;
            this.recoveryKey = rawValues.recoveryKey;
            this.retailWalletSeedId = rawValues.retailWalletSeedId;
            this.status = rawValues.status;
            this.closedDate = rawValues.closedDate;
            // set values in model properties for added formControls
            super.setValuesInAddedPropertiesOfAttachedFormControls(values, useFormGroupValuesToModel);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                institutionId: new FormControl(this.institutionId),
                accountId: new FormControl(this.accountId),
                recoveryKey: new FormControl(this.recoveryKey),
                retailWalletSeedId: new FormControl(this.retailWalletSeedId),
                status: new FormControl(this.status),
                closedDate: new FormControl(this.closedDate),
            });
        }
        return this._formGroup;
    }

    /**
     * set the FormGroup values to the model values.
    */
    setFormGroupValues() {
        this.$formGroup.controls['institutionId'].setValue(this.institutionId);
        this.$formGroup.controls['accountId'].setValue(this.accountId);
        this.$formGroup.controls['recoveryKey'].setValue(this.recoveryKey);
        this.$formGroup.controls['retailWalletSeedId'].setValue(this.retailWalletSeedId);
        this.$formGroup.controls['status'].setValue(this.status);
        this.$formGroup.controls['closedDate'].setValue(this.closedDate);
        // set formValues in added formControls
        super.setFormGroupValuesInAddedFormControls();
    }
}

