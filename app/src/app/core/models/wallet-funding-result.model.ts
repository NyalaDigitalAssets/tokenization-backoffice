/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';


import { FaucetFundingResult } from './enums';

export interface IWalletFundingResult {
    walletId?: string;
    result?: FaucetFundingResult;
}


export class WalletFundingResult extends BaseModel implements IWalletFundingResult  {
    walletId: string;
    result: FaucetFundingResult;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
     * @useFormGroupValuesToModel if true use formValues
    */
    constructor(values?: any, useFormGroupValuesToModel = false) {
        super();

        if (values) {
            this.setValues(values, useFormGroupValuesToModel);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, useFormGroupValuesToModel = false): void {
        if (values) {
            const rawValues = this.getValuesToUse(values, useFormGroupValuesToModel);
            this.walletId = rawValues.walletId;
            this.result = rawValues.result;
            // set values in model properties for added formControls
            super.setValuesInAddedPropertiesOfAttachedFormControls(values, useFormGroupValuesToModel);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                walletId: new FormControl(this.walletId),
                result: new FormControl(this.result, [enumValidator(FaucetFundingResult), ]),
            });
        }
        return this._formGroup;
    }

    /**
     * set the FormGroup values to the model values.
    */
    setFormGroupValues() {
        this.$formGroup.controls['walletId'].setValue(this.walletId);
        this.$formGroup.controls['result'].setValue(this.result);
        // set formValues in added formControls
        super.setFormGroupValuesInAddedFormControls();
    }
}

